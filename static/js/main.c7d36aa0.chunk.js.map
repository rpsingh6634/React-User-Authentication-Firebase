{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","App","useState","loading","setLoading","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","useAuth","emailRef","useRef","passwordRef","a","current","value","alert","classNmae","className","id","for","ref","type","placeholder","disabled","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAmBMA,GADMC,YAVW,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAKIC,eAEN,SAASC,EAAOC,EAAOC,GAC5B,OAAOC,YAA+BZ,EAAMU,EAAOC,GAG9C,SAASE,EAAMH,EAAOC,GAC3B,OAAOG,YAA2Bd,EAAMU,EAAOC,GAG1C,SAASI,IACZ,OAAOC,YAAQhB,G,YC1BJ,SAASiB,IACtB,MAAgCC,oBAAS,GAAzC,mBAAQC,EAAR,KAAiBC,EAAjB,KACMC,ED4BD,WACH,MAAwCH,qBAAxC,mBAAQG,EAAR,KAAqBC,EAArB,KAMA,OAJAC,qBAAU,WAEV,OADcC,YAAmBxB,GAAM,SAAAyB,GAAI,OAAKH,EAAeG,QAE5D,IACIJ,ECnCWK,GACfC,EAAWC,mBACXC,EAAcD,mBAJS,4CAM5B,sBAAAE,EAAA,6DACEV,GAAW,GADb,kBAGQX,EAAOkB,EAASI,QAAQC,MAAOH,EAAYE,QAAQC,OAH3D,sDAKKC,MAAM,UALX,OAOEb,GAAW,GAPb,0DAN4B,kEAgB5B,sBAAAU,EAAA,6DACEV,GAAW,GADb,kBAGQP,EAAMc,EAASI,QAAQC,MAAOH,EAAYE,QAAQC,OAH1D,sDAKKC,MAAM,UALX,OAOEb,GAAW,GAPb,0DAhB4B,kEA0B5B,sBAAAU,EAAA,6DACCV,GAAW,GADZ,kBAGSL,IAHT,sDAKGkB,MAAM,UALT,OAOCb,GAAW,GAPZ,0DA1B4B,sBAmC5B,OAEE,qBAAKc,UAAU,OAAf,SACE,sBAAKC,UAAU,YAAf,UACF,sBAAKA,UAAU,SAAf,iCAAsCd,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAaX,SACnD,sBAAK0B,GAAG,SAAR,UACA,uBAAOC,IAAI,QAAX,mBACG,uBAAOC,IAAKX,EAAUY,KAAK,QAAQC,YAAY,UAC/C,uBAAOH,IAAI,WAAX,sBACA,uBAAOC,IAAKT,EAAaU,KAAK,WAAWC,YAAY,gBAGtD,wBAAQL,UAAU,MAAMM,SAAWtB,GAAWE,EAAaqB,QA/CnC,2CA+CxB,qBACA,wBAAQP,UAAU,MAAMM,SAAWtB,GAAWE,EAAaqB,QAhDnC,2CAgDxB,oBACA,wBAASP,UAAU,MAAMM,SAAWtB,IAAYE,EAAaqB,QAjDrC,2CAiDxB,0BCrDN,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACrC,EAAD,MAEFsC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c7d36aa0.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut } from \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDG_odHJ8i4NyynBWFZtQTXtdgQuEU6_PU\",\r\n  authDomain: \"logicism-auth-59f30.firebaseapp.com\",\r\n  projectId: \"logicism-auth-59f30\",\r\n  storageBucket: \"logicism-auth-59f30.appspot.com\",\r\n  messagingSenderId: \"326503189976\",\r\n  appId: \"1:326503189976:web:e83f35aeaa37925fec76ad\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth();\r\n\r\nexport function signup(email, password) {\r\n  return createUserWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function login(email, password) {\r\n  return signInWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport function logout(){\r\n    return signOut(auth);\r\n}\r\n//custom Hook\r\n\r\nexport function useAuth(){\r\n    const [ currentUser, setCurrentUser ] = useState();\r\n\r\n    useEffect(() => {\r\n    const unsub = onAuthStateChanged(auth, user =>  setCurrentUser(user));\r\n    return unsub;\r\n    }, [])\r\n    return currentUser;\r\n}","import { useRef, useState } from \"react\";\nimport { signup, login, logout, useAuth } from \"./firebase\";\n\n\nexport default function App() {\n  const [ loading, setLoading ] = useState(false);\n  const currentUser = useAuth();\n const emailRef = useRef();\n const passwordRef = useRef();\n\n  async function handleSignup(){\n    setLoading(true);\n    try{\n    await signup(emailRef.current.value, passwordRef.current.value);\n    } catch {\n       alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  async function handleLogin(){\n    setLoading(true);\n    try{\n    await login(emailRef.current.value, passwordRef.current.value);\n    } catch {\n       alert(\"Error!\");\n    }\n    setLoading(false);\n  }\n\n  async function handleLogout(){\n   setLoading(true);\n   try {\n     await logout();\n   } catch {\n     alert(\"Error!\")\n   }\n   setLoading(false);\n  }\n  return (\n    \n    <div classNmae=\"main\" >\n      <div className=\"container\">\n    <div className=\"status\">Current User:{currentUser?.email}</div>\n    <div id=\"fields\">\n    <label for=\"email\">Email</label>\n       <input ref={emailRef} type=\"email\" placeholder=\"Email\"/>\n       <label for=\"password\">Password</label>\n       <input ref={passwordRef} type=\"password\" placeholder=\"Password\"/>\n      </div>\n\n      <button className=\"btn\" disabled={ loading || currentUser} onClick={handleSignup}>Sign Up</button>\n      <button className=\"btn\" disabled={ loading || currentUser} onClick={handleLogin}>Log In</button>\n      <button  className=\"btn\" disabled={ loading || !currentUser} onClick={handleLogout}>Log Out</button>\n    </div>\n    </div>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}